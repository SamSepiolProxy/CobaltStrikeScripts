#!/bin/bash
echo -n "Enter your DNS (A) record for domain [ENTER]: "
read domain
echo

echo -n "Enter your redirection domain [ENTER]: "
read redirectdomain
echo

echo -n "Enter your Teamserver IP address [ENTER]: "
read TEAMSERVER_IP
echo

echo -n "Enter your profile name and path [ENTER]: "
read malprofile
echo

# Environment Checks
func_check_env(){
  # Check Sudo Dependency going to need that!
  if [ $(id -u) -ne '0' ]; then
    echo
    echo ' [ERROR]: This Setup Script Requires root privileges!'
    echo '          Please run this setup script again with sudo or run as login as root.'
    echo
    exit 1
  fi
}

func_check_tools(){
  # Check Sudo Dependency going to need that!
  if [ $(which certbot) ]; then
    echo '[Success] certbot is already installed'
  else
    echo 
    echo '[ERROR]: certbot does not seem to be installed'
    echo
    exit 1
  fi
}

func_install_apache(){
apt-get install apache2 -y
a2enmod rewrite headers proxy proxy_http ssl cache
a2dismod -f deflate
service apache2 reload
}

func_install_letsencrypt(){
  echo '[Starting] to build letsencrypt cert!'
  service apache2 stop
  sudo certbot certonly --standalone -d $domain --non-interactive --agree-tos --register-unsafely-without-email
  if [ -e /etc/letsencrypt/live/$domain/fullchain.pem ]; then
    echo '[Success] letsencrypt certs are built!'
  else
    echo "[ERROR] letsencrypt certs failed to build.  Check that DNS A record is properly configured for this domain"
    exit 1
  fi
}

func_create_virtualhost() {
cd /tmp
cat > 000-$domain.conf << EOF
<VirtualHost *:80>
	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html
    
	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined
    ErrorDocument 401 " "
    ErrorDocument 403 " "
    ErrorDocument 404 " "
    ErrorDocument 500 " "
    ErrorDocument 503 " "

    # Include redirect.rules
    Include /etc/apache2/redirect.rules
</VirtualHost>
EOF
cat > $domain-ssl.conf << EOF
<IfModule mod_ssl.c>
  <VirtualHost _default_:443>
    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/html
    ServerAlias $domain
    SSLEngine on
    # Enable Proxy
    SSLProxyEngine On
    # Trust Self-Signed Certificates generated by Cobalt Strike
    SSLProxyVerify none
    SSLProxyCheckPeerCN off
    SSLProxyCheckPeerName off
    SSLCertificateFile      /etc/letsencrypt/live/$domain/fullchain.pem
    SSLCertificateKeyFile      /etc/letsencrypt/live/$domain/privkey.pem
    SSLCertificateChainFile   /etc/letsencrypt/live/$domain/chain.pem
    # Include redirect.rules
    Include /etc/apache2/redirect.rules
    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory /usr/lib/cgi-bin>
        SSLOptions +StdEnvVars
    </Directory>
  </VirtualHost>
</IfModule>
EOF

cat > /etc/apache2/mods-enabled/ssl.conf << EOF
<IfModule mod_ssl.c>
        SSLRandomSeed startup builtin
        SSLRandomSeed startup file:/dev/urandom 512
        SSLRandomSeed connect builtin
        SSLRandomSeed connect file:/dev/urandom 512
        AddType application/x-x509-ca-cert .crt
        AddType application/x-pkcs7-crl .crl
        SSLPassPhraseDialog  exec:/usr/share/apache2/ask-for-passphrase
        SSLSessionCache         shmcb:${APACHE_RUN_DIR}/ssl_scache(512000)
        SSLSessionCacheTimeout  300
        SSLCipherSuite HIGH:!aNULL
        SSLProtocol -all +TLSv1 +TLSv1.1 +TLSv1.2
</IfModule>
EOF
a2ensite default-ssl.conf
sudo cp /tmp/000-$domain.conf /etc/apache2/sites-available/000-default.conf
sudo cp /tmp/$domain-ssl.conf /etc/apache2/sites-available/default-ssl.conf
}

func_additional_apache_conf() {
## Update Apached Server Header, ServerTokens, and logging
echo "Update Update Apached Server Header, ServerTokens, and logging"
sed -i -e 's/\(ServerTokens\s\+\)OS/\1Prod/g' /etc/apache2/conf-enabled/security.conf
sed -i -e 's/\(ServerSignature\s\+\)On/\1Off/g' /etc/apache2/conf-enabled/security.conf
echo "LogLevel alert rewrite:trace2" >> /etc/apache2/conf-enabled/security.conf
}

func_redirect_rules() {
cd /tmp
wget https://raw.githubusercontent.com/threatexpress/cs2modrewrite/master/cs2modrewrite.py
python3 cs2modrewrite.py -i $malprofile -c https://$TEAMSERVER_IP -r https://$redirectdomain -o /etc/apache2/redirect.rules
}

func_check_env
func_check_tools
func_install_apache
func_install_letsencrypt
sudo service apache2 start
func_create_virtualhost
func_additional_apache_conf
func_redirect_rules
sudo service apache2 restart